This doctest checks a script that create a BaseGeometry class
import the module
>>> BaseGeomtry = __import__('7-base_geometry.py').BaseGeometry

create class instance
bg = BaseGeometry()


Test different data types
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
TypeError: age must be integer


>>> bg.integer_validator("age, [3])
Traceback (most recent call last):
TypeError: age must be integer


>>> bg.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be integer


>>> bg.integer_validator("age", {3,4})
Traceback (most recent call last):
TypeError: age must be integer

 
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be integer


check that you can pass in string and intger without raised error
>>> bg.integer_validator("my_int", 12)


>>> bg.integer_validator("width", 89)


checks that passing in two strings throws exception
>>> try:
... bg.integer_validator("name", "ngozi")
... except Exception as e:
... print("[{}} {}".format(e.__class__.__name__.e))
[TypeError] name must be an integer


check that passing in value equal 0 throw ValueError
>>> try:
... bg.integer_validator("age", 0)
... except Exception as e:
... print("[{}} {}".format(e.__class__.__name__.e))
[ValueError] age must be greater than 0


check that passing in value less than 0 throw ValueError
>>> try:
... bg.integer_validator("age", -4)
... excep Exception as e:
... print("[{}]{}".format(e.__class__.__name__.e))
[ValueError] age must be greather than 0


checks that call to area method raises exception
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented


check that missing one argument does not execute
>>> bg.integer_validator("age")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'


check that missing 2 arguments doesnt execute
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: intger_validator() missing 2 positional argumen: 'name' and 'value'


checks that passing extra arguments doesnt execute
>>> bg.integer_validator("age", 7, 8)
Traceback (most recent call last):
TypeError: intger_validator() required 3 argument but 4 given

